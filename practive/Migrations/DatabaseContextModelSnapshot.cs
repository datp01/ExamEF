// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practive.Models;

#nullable disable

namespace practive.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("practive.Models.Exam", b =>
                {
                    b.Property<long>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExamId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            ExamId = 1L,
                            Score = 70,
                            StudentId = 1L,
                            SubjectId = 1
                        },
                        new
                        {
                            ExamId = 2L,
                            Score = 50,
                            StudentId = 2L,
                            SubjectId = 2
                        },
                        new
                        {
                            ExamId = 3L,
                            Score = 70,
                            StudentId = 3L,
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("practive.Models.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ExamsExamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("ExamsExamId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1L,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2003, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dat1@gmail.com",
                            Name = "Tien Dat"
                        },
                        new
                        {
                            StudentId = 2L,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2003, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anh1@gmail.com",
                            Name = "Tien Anh"
                        },
                        new
                        {
                            StudentId = 3L,
                            Address = "Ha Noi",
                            DateOfBirth = new DateTime(2003, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dung1@gmail.com",
                            Name = "Tien Dung"
                        });
                });

            modelBuilder.Entity("practive.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ExamsExamId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.HasIndex("ExamsExamId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Description = "Mon toan",
                            EndDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "T01",
                            SubjectName = "Toan"
                        },
                        new
                        {
                            SubjectId = 2,
                            Description = "Mon Van",
                            EndDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "V01",
                            SubjectName = "Van"
                        },
                        new
                        {
                            SubjectId = 3,
                            Description = "Mon English",
                            EndDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "A01",
                            SubjectName = "Anh"
                        });
                });

            modelBuilder.Entity("practive.Models.Student", b =>
                {
                    b.HasOne("practive.Models.Exam", "Exams")
                        .WithMany("Students")
                        .HasForeignKey("ExamsExamId");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("practive.Models.Subject", b =>
                {
                    b.HasOne("practive.Models.Exam", "Exams")
                        .WithMany("Subjects")
                        .HasForeignKey("ExamsExamId");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("practive.Models.Exam", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
